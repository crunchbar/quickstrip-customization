// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MakeYourOwn /> renders correctly 1`] = `
<Fragment>
  <WithStyles(ForwardRef(Paper))
    className="myo vertical-space-1 border"
    id="makeYourOwnBox"
    tabIndex={0}
  >
    <WithStyles(ForwardRef(Typography))
      className="pad-1"
      component="h1"
      variant="h5"
    >
      Make Your Own Button
    </WithStyles(ForwardRef(Typography))>
    <div
      className="myo-button-list"
    >
      <WithStyles(ForwardRef(Button))
        className="commonListItem makeYourOwnItem"
        key="WEB"
        onClick={[Function]}
        variant="contained"
      >
        That Opens A Web Site
      </WithStyles(ForwardRef(Button))>
      <WithStyles(ForwardRef(Button))
        className="commonListItem makeYourOwnItem"
        key="APP"
        onClick={[Function]}
        variant="contained"
      >
        That Launches An App
      </WithStyles(ForwardRef(Button))>
      <WithStyles(ForwardRef(Button))
        className="commonListItem makeYourOwnItem"
        key="KEYBOARD"
        onClick={[Function]}
        variant="contained"
      >
        That Send Keystrokes
      </WithStyles(ForwardRef(Button))>
    </div>
  </WithStyles(ForwardRef(Paper))>
  <WithStyles(ForwardRef(Dialog))
    aria-labelledby="Customize Your Button"
    className="myo-dialog"
    fullWidth={true}
    onClose={[Function]}
    open={false}
  >
    <WithStyles(ForwardRef(DialogTitle))
      className="myo-header"
    >
      Customize Your Button
      <WithStyles(ForwardRef(IconButton))
        aria-label="Close Customize Your Button Dialog"
        edge="end"
        onClick={[Function]}
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(DialogTitle))>
    <WithStyles(ForwardRef(DialogContent))>
      <form
        autoComplete="off"
        noValidate={true}
      >
        <WithStyles(ForwardRef(Typography))
          align="center"
        >
          That Launches An App
        </WithStyles(ForwardRef(Typography))>
        <div
          className="flex-center"
        >
          <div
            className="demo-quickstrip-item"
          >
            <ScaleText
              maxFontSize={16}
              minFontSize={-Infinity}
              widthOnly={false}
            />
          </div>
        </div>
        <ForwardRef
          error={false}
          id="button-name"
          inputProps={
            Object {
              "maxLength": 20,
            }
          }
          label="Name "
          onChange={[Function]}
          placeholder="Enter Name for Button"
          required={true}
          value=""
        />
        <WithStyles(ForwardRef(FormControl))
          className="input-container"
          error={false}
          fullWidth={true}
          required={true}
        >
          <WithStyles(ForwardRef(InputLabel))
            htmlFor="button-data"
            shrink={true}
          >
            Name of the application
          </WithStyles(ForwardRef(InputLabel))>
          <WithStyles(ForwardRef(Select))
            displayEmpty={true}
            inputProps={
              Object {
                "className": "commonListItem makeYourOwnItem",
                "id": "button-data",
              }
            }
            name="buttonData"
            onChange={[Function]}
            renderValue={[Function]}
            value=""
          >
            <WithStyles(ForwardRef(MenuItem))
              value="Other"
            >
              Other
            </WithStyles(ForwardRef(MenuItem))>
            <WithStyles(ForwardRef(MenuItem))
              key="Notepad"
              value="C:\\\\Windows\\\\System32\\\\notepad.exe"
            >
              Notepad
            </WithStyles(ForwardRef(MenuItem))>
          </WithStyles(ForwardRef(Select))>
        </WithStyles(ForwardRef(FormControl))>
        <ForwardRef
          error={false}
          id="popup-text"
          inputProps={
            Object {
              "maxLength": 510,
            }
          }
          label="Popup Text"
          onChange={[Function]}
          placeholder="Enter Popup Text"
          required={true}
          value=""
        />
        <ForwardRef
          id="description"
          label="Description"
          onChange={[Function]}
          placeholder="Enter description"
          value=""
        />
        <WithStyles(ForwardRef(FormControlLabel))
          className="myo-switch"
          control={
            <ForwardRef(WithStyles)
              checked={false}
              color="primary"
              inputProps={
                Object {
                  "aria-label": "fullScreen primary checkbox",
                  "className": "commonListItem makeYourOwnItem",
                }
              }
              onChange={[Function]}
              value="fullScreen"
            />
          }
          label="Full Screen"
          labelPlacement="start"
          value="start"
        />
      </form>
      <div
        className="actions-container"
      >
        <WithStyles(ForwardRef(Button))
          className="button commonListItem makeYourOwnItem"
          onClick={[Function]}
        >
          Reset
        </WithStyles(ForwardRef(Button))>
        <WithStyles(ForwardRef(Button))
          className="button commonListItem makeYourOwnItem"
          color="primary"
          onClick={[Function]}
          variant="contained"
        >
          Make
        </WithStyles(ForwardRef(Button))>
      </div>
    </WithStyles(ForwardRef(DialogContent))>
  </WithStyles(ForwardRef(Dialog))>
</Fragment>
`;
